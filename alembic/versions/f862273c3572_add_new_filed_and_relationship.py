"""add new filed and relationship

Revision ID: f862273c3572
Revises: c538725a7676
Create Date: 2023-03-31 13:50:55.707008

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f862273c3572'
down_revision = 'c538725a7676'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('can_see_private_wish',
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.BigInteger(), nullable=True),
    sa.Column('available_user_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['available_user_id'], ['user.id'], name=op.f('fk_can_see_private_wish_available_user_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_can_see_private_wish_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_can_see_private_wish')),
    )
    op.create_index(op.f('ix_can_see_private_wish_available_user_id'), 'can_see_private_wish', ['available_user_id'], unique=False)
    op.create_index(op.f('ix_can_see_private_wish_owner_id'), 'can_see_private_wish', ['owner_id'], unique=False)
    op.drop_index('ix_can_see_wish_available_user_id', table_name='can_see_wish')
    op.drop_index('ix_can_see_wish_owner_id', table_name='can_see_wish')
    op.drop_table('can_see_wish')
    op.add_column('config', sa.Column('send_notification_to_telegram', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('config', 'send_notification_to_telegram')
    op.create_table('can_see_wish',
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('available_user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['available_user_id'], ['user.id'], name='fk_can_see_wish_available_user_id_user', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='fk_can_see_wish_owner_id_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk_can_see_wish'),
    )
    op.create_index('ix_can_see_wish_owner_id', 'can_see_wish', ['owner_id'], unique=False)
    op.create_index('ix_can_see_wish_available_user_id', 'can_see_wish', ['available_user_id'], unique=False)
    op.drop_index(op.f('ix_can_see_private_wish_owner_id'), table_name='can_see_private_wish')
    op.drop_index(op.f('ix_can_see_private_wish_available_user_id'), table_name='can_see_private_wish')
    op.drop_table('can_see_private_wish')
    # ### end Alembic commands ###
